package us.dot.its.jpo.ode.importer;

import static org.junit.Assert.*;

import java.io.BufferedWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;

import java.nio.file.Paths;
import java.util.Date;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Ignore;
import org.junit.Test;

import us.dot.its.jpo.ode.OdeProperties;

public class ImporterTest {
	
	public static final int FILETYPE_LOG = 0;
	public static final int FILETYPE_BSM = 1;
	
	private static Importer testImporter;
	private static OdeProperties testOdeProps;

	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
		testOdeProps = new OdeProperties();
		
	}

	@AfterClass
	public static void tearDownAfterClass() throws Exception {
		testOdeProps = null;
		
	}

	@Before
	public void setUp() throws Exception {
		testImporter = new Importer(testOdeProps);
		
		int importerStatus = testImporter.getImporterStatus();
		assertEquals("Importer Status after constructor: ", 0, importerStatus);
	}

	@After
	public void tearDown() throws Exception {
		testImporter = null;
	}
	
	
	// test files
	
	static String xmlBSM = "<BasicSafetyMessage>\n<msgID>basicSafetyMessage</msgID>\n<secMark>10</secMark>\n<id>1111111111</id>\n<lat>60369542144</lat>\n<long_>-984987654</long_>\n<elev>13000</elev>\n<speed>10000</speed>\n<heading>1820</heading>\n<accelSet>\n<long_>0</long_>\n<lat>0</lat>\n<vert>0</vert>\n<yaw>0</yaw>\n</accelSet>\n<brakes>\n<wheelBrakes>11110000</wheelBrakes>\n<traction>off</traction>\n<abs>off</abs>\n</brakes>\n<steering>1501</steering>\n<throttle>60</throttle>\n<lightSet />\n<size>\n<width>213</width>\n<length>640</length>\n</size>\n<valueCnt1>0</valueCnt1>\n<items1 />\n<valueCnt2>0</valueCnt2>\n<items2 />\n</BasicSafetyMessage>";
    static String b64VSD = "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";


    static String generateUniqueFileName(String extension) {
	    String filename = "";
	    long millis = System.currentTimeMillis();
	    String datetime = new Date().toString();
	    datetime = datetime.replace(" ", "");
	    datetime = datetime.replace(":", "");
	    
	    filename = datetime + "_" + millis + "." + extension;
	    return filename;
	}
	
    
    private String createNewFile(int type) {
		
		
		try {
			
			String extension;
			String payload;
			if (type == FILETYPE_LOG) {
				extension = "xml";
				payload = xmlBSM;
			}
			else {
				extension = "uper";
				payload = b64VSD;
				
			}
			String fileName = generateUniqueFileName(extension);
			Path rootPath = testImporter.getInboxFolder();
			Path path = Paths.get(rootPath.toString(), fileName);
			try (BufferedWriter writer = Files.newBufferedWriter(path)) {
			    writer.write(payload);
			    System.out.println("Created " + path);
			}
			return path.toString();
			
		} catch (IOException e) {
		    e.printStackTrace();
		    return null;
		}
		
	}
	
	

	
	@Test
	public void testGetImporterStatus() {
		System.out.println(">> In testGetImporterStatus");
		System.out.println("******************************");
		
		assertEquals(testImporter.getImporterStatus(), Importer.HEALTHY);
		
	}

	
	@Test
	public void testGetImporterErrors() {
		System.out.println(">> In testGetImporterErrors");
		System.out.println("******************************");
		
		assertEquals(testImporter.getImporterErrors(), "No errors, importer is working like a champ");
	}

	@Test
	public void testVerifyInboxFolder() {
		
//		testImporter.verifyInboxFolder();
		System.out.println(">> In testVerifyInboxFolder");
		System.out.println("******************************");
		
		try {
			testImporter.verifyInboxFolder();
		} catch (IOException e) {
			
			
			e.printStackTrace();
			
			
		}
		finally {
			int importerStatus = testImporter.getImporterStatus();
			assertEquals("Importer Status: ", 0, importerStatus);
		}
	}

	

	
	@Test
	public void testGetInboxFolder() {
		System.out.println(">> In testGetInboxFolder");
		System.out.println("******************************");
		
		Path inBox = testImporter.getInboxFolder();
		Path uploadLoc = Paths.get(testOdeProps.getUploadLocation());
		assertEquals(inBox, uploadLoc);
	}

	
	@Test
	public void testSetInboxFolder() {
		System.out.println(">> In testSetInboxFolder");
		System.out.println("******************************");
		
		Path oldInbox = testImporter.getInboxFolder();
		Path newInbox = Paths.get(oldInbox.toString(), "fixpix");
		testImporter.setInboxFolder(newInbox);
		Path modifiedInbox = testImporter.getInboxFolder();
		//testImporter.setInboxFolder(oldInbox);
		assertEquals(newInbox, modifiedInbox);
	}

	

	@Test
	public void testProcessNonExitsingFile() {
		
		System.out.println(">> In testProcessNonExistingFile");
		System.out.println("******************************");
		
			
		try {			
			Path filePath = Paths.get(testOdeProps.getUploadLocation(),"immaginary_file.uper");
			testImporter.processFile(filePath);
	        fail("Should throw an exception since the file does not exist");
	    } catch (Exception e) {
	    	
	    	assertTrue(e instanceof java.nio.file.NoSuchFileException);

	    }
		
	}
	
	
	@Test
	public void testProcessFile() {
		
		System.out.println(">> In testProcessFile");
		System.out.println("******************************");
		
		try {
			
			String newFileName = this.createNewFile(FILETYPE_BSM);
			Path filePath = Paths.get(newFileName);
			testImporter.processFile(filePath);
			//
			
			
		}
		catch (Exception e) {
			fail("Fail! Method should have processed file w/o exceptions");
			
			
		}
	}


	@Test
	public void testProcessExistingFiles() {
		System.out.println(">> In testProcessExistingFiles");
		System.out.println("******************************");
		
		for(int q=0; q<10; q++) {
			this.createNewFile(FILETYPE_BSM);
		}
		
		testImporter.processExistingFiles(Paths.get(testOdeProps.getUploadLocation()));
		
		
	}

	
	@Test
	public void testRun() {
		System.out.println(">> In testProcessExistingFiles");
		System.out.println("******************************");
		
		for(int q=0; q<10; q++) {
			this.createNewFile(FILETYPE_BSM);
		}
		
		testImporter.run();
	}

}
