#General Properties
#==================
#server.port = 8443
#server.ssl.key-store = classpath:jpo_ode_keystore.jks
#server.ssl.key-store-password = keystore_pass
#server.ssl.key-password = key_pass

spring.http.multipart.max-file-size=1MB
spring.http.multipart.max-request-size=1MB

#ode.kafkaBrokers = localhost:9092
#ode.verboseJson = false
#ode.externalIpv4 = <YOUR_EXTERNAL_IPV4 or define env variable ${ODE_EXTERNAL_IPV4}>
#ode.externalIpv6 = <YOUR_EXTERNAL_IPV6 or define env variable ${ODE_EXTERNAL_IPV6}>

#File import properties
#ode.uploadLocation = uploads
#ode.uploadLocationBsm = bsm
#ode.uploadLocationMessageFrame = messageframe

#USDOT Situation Data Clearinghouse (SDC)/ Situation Data Warehouse (SDW), a.k.a Data Distribution System (DDS) Properties
#=========================================================================================================================

#DDS WebSocket Properties
#------------------------
#ode.ddsCasUsername=<SDWUSERNAME> or define env variable ${ODE_DDS_CAS_USERNAME}
#ode.ddsCasPassword=<SDWPASSWORD> or define env variable ${ODE_DDS_CAS_PASSWORD}

#IPv4 address and listening UDP port for SDC
#-------------------------------------------
#ode.sdcIp=104.130.170.234
#ode.sdcPort=46753

#Enable/disable depositing sanitized BSMs to SDC
#-----------------------------------------------
#ode.depositSanitizedBsmToSdc=true

#ode.serviceRespExpirationSeconds = 60
#ode.serviceResponseBufferSize = 500

#BSM Properties
#--------------
#ode.bsmReceiverPort = 46800
#ode.bsmBufferSize = 500

#Vehicle Situation Data (VSD) Properties
#---------------------------------------
#ode.vsdReceiverPort = 46753
#ode.vsdDepositorPort = 5555
#ode.vsdBufferSize = 500

#Intersection Situation Data (ISD) Properties
#--------------------------------------------
#ode.kafkaTopicEncodedIsd = encodedIsd
#ode.isdReceiverPort = 46801
#ode.isdDepositorPort = 6666
#ode.isdBufferSize = 500
#ode.messagesUntilTrustReestablished = 5

#Security Properties
#-------------------
#ode.caCertPath = path/to/CaCertFile or define env variable ${ODE_CA_CERT_PATH}
#ode.selfCertPath = path/to/selfCertFile or define env variable ${ODE_SELF_CERT_PATH}
#ode.selfPrivateKeyReconstructionFilePath = path/to/selfPrivateKeyReconstructionFile or define env variable ${ODE_SELF_PRIVATE_KEY_RECONSTRUCTION_FILE_PATH} 
#ode.selfSigningPrivateKeyFilePath = path/to/selfSigningPrivateKeyFile or define env variable ${ODE_SELF_SIGNING_PRIVATE_KEY_FILE_PATH}
#ode.securitySvcsSignatureUri=   // The URI for signing data using the jpo-security-svcs module. Normally doesn't need to be set because ODE will calculate it based on DOCKER_HOST_IP. If the service is deployed outside Docker, it should be set to http://host:ip/sign of the server it's running on

#Kafka Topics
ode.kafkaTopicsDisabled = {"topic.OdeBsmRxPojo", "topic.OdeBsmTxPojo", "topic.OdeBsmDuringEventPojo", "topic.OdeTimRxJson"};
#BSM
#ode.kafkaTopicOdeBsmPojo = "topic.OdeBsmPojo";
#ode.kafkaTopicOdeBsmJson = "topic.OdeBsmJson";
#ode.kafkaTopicOdeBsmRxPojo= "topic.OdeBsmRxPojo";
#ode.kafkaTopicOdeBsmTxPojo= "topic.OdeBsmTxPojo";
#ode.kafkaTopicOdeBsmDuringEventPojo= "topic.OdeBsmDuringEventPojo";
#ode.kafkaTopicFilteredOdeBsmJson = "topic.FilteredOdeBsmJson";

#TIM
#ode.kafkaTopicOdeTimPojo = "topic.OdeTimPojo";
#ode.kafkaTopicOdeTimJson = "topic.OdeTimJson";
#ode.kafkaTopicOdeDNMsgJson= "topic.OdeDNMsgJson";
#ode.kafkaTopicOdeDNMsgPojo= "topic.OdeDNMsgPojo";
#ode.kafkaTopicOdeTimRxJson= "topic.OdeTimRxJson";
#ode.kafkaTopicOdeTimBroadcastPojo= "topic.OdeTimBroadcastPojo";
#ode.kafkaTopicOdeTimBroadcastJson= "topic.OdeTimBroadcastJson";

#VSD
#ode.kafkaTopicVsdPojo = "AsnVsdPojo";

#ISD
#ode.kafkaTopicIsdPojo = "AsnIsdPojo";

#ASN.1 CODEC
#ode.kafkaTopicAsn1DecoderInput = "topic.Asn1DecoderInput";
#ode.kafkaTopicAsn1DecoderOutput = "topic.Asn1DecoderOutput";
#ode.kafkaTopicAsn1EncoderInput = "topic.Asn1EncoderInput";
#ode.kafkaTopicAsn1EncoderOutput = "topic.Asn1EncoderOutput";


